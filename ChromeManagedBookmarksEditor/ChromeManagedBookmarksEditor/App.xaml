<Application x:Class="ChromeManagedBookmarksEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ChromeManagedBookmarksEditor"
             xmlns:vm="clr-namespace:ChromeManagedBookmarksEditor.ViewModel"
             xmlns:views="clr-namespace:ChromeManagedBookmarksEditor.Views"
             xmlns:cc="clr-namespace:ChromeManagedBookmarksEditor.CustomControls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Data Templates -->
        <DataTemplate DataType="{x:Type vm:ManagedBookmarksViewModel}">
            <views:ManagedBookmarksView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:HelpViewModel}">
            <views:HelpView/>
        </DataTemplate>
        <!-- Styles -->
        <!-- No Chrome Button Style -->
        <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Main Button Style -->
        <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}"> <!-- BasedOn="{StaticResource NoChromeButton}"> -->
            <Setter Property="Margin" Value="0 0 0 3"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>
        
        
        
        <!-- Serialize Button Animation testing stuff here. Going to make a custom button at some point. -->
        <Style x:Key="SerializeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MainButtonStyle}">
            
        </Style>
        
        
        
        <!-- Main TextBox Style -->
        <Style x:Key="MainTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <!-- Selectable TextBox Base Triggers -->
        <Style x:Key="SelectableTextBoxBaseTriggers" TargetType="{x:Type cc:SelectableTextBox}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="DodgerBlue"/>
                    <Setter Property="Foreground" Value="Gainsboro"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="IsTabStop" Value="True"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- URL Selectable TextBox Style -->
        <Style x:Key="UrlTextBoxStyle" TargetType="{x:Type cc:SelectableTextBox}" BasedOn="{StaticResource SelectableTextBoxBaseTriggers}">
            <Setter Property="Background" Value="LightSteelBlue"/>
            <Setter Property="Foreground" Value="DarkSlateBlue"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="MinWidth" Value="200"/>
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>
        <!-- Folder Selectable TextBox Style -->
        <Style x:Key="FolderTextBoxStyle" TargetType="{x:Type cc:SelectableTextBox}" BasedOn="{StaticResource SelectableTextBoxBaseTriggers}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="DarkGoldenrod"/>
            <Setter Property="Background" Value="Wheat"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Cursor" Value="Arrow"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>
        <!-- Current Path TextBlock Style -->
        <Style x:Key="PathTextBoxStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="Foreground" Value="Gainsboro"/>
        </Style>
        <!-- Current Folder Panel Buttons Style -->
        <Style x:Key="PanelButtonsStyle" TargetType="{x:Type Button}">
            <Setter Property="MinWidth" Value="140"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="Gainsboro"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="IsTabStop" Value="False"/>
        </Style>
        <!-- Banner Backing Style -->
        <Style x:Key="BannerBacking" TargetType="{x:Type cc:BannerBacking}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <Trigger Property="IsVisibleBanner" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- New Folder Banner Style-->
        <Style x:Key="NewFolderBannerStyle" TargetType="{x:Type cc:FolderBanner}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Height" Value="130"/>
            <Style.Triggers>
                <Trigger Property="IsVisibleBanner" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Alert Banner Style-->
        <Style x:Key="AlertBannerStyle" TargetType="{x:Type cc:AlertBanner}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Height" Value="130"/>
            <Style.Triggers>
                <Trigger Property="IsVisibleBanner" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
